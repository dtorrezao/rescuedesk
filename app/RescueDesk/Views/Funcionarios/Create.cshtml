@model RescueDesk.ViewModels.FuncionarioViewModel

@{
    Layout = null;
    ViewBag.Title = "Funcionários";
    ViewBag.SubTitle = "Criar Funcionário";
}

@*<div class="col-lg-12">
    @using (Html.BeginForm(
        actionName: "Create",
        controllerName: "Funcionarios",
        routeValues: null,
        method: FormMethod.Post,
        htmlAttributes: new { @enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(x => x.Utilizador.password)
        @Html.HiddenFor(x => x.Utilizador.idtipo)
        @Html.HiddenFor(x => x.Funcionario.ativo)
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
                        <div class="card-body card-block">
                            <div class="form-group">x
                                <label for="@Html.NameFor(x=>x.Funcionario.nome)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.nome)</label>
                                @Html.EditorFor(model => model.Funcionario.nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu primeiro e último nome" } })
                                @Html.ValidationMessageFor(model => model.Funcionario.nome, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.Funcionario.cargo)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.cargo)</label>
                                @Html.EditorFor(model => model.Funcionario.cargo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu cargo" } })
                                @Html.ValidationMessageFor(model => model.Funcionario.cargo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">x
                                <label for="@Html.NameFor(x=>x.Funcionario.contacto)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.contacto)</label>
                                @Html.EditorFor(model => model.Funcionario.contacto, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu contacto" } })
                                @Html.ValidationMessageFor(model => model.Funcionario.contacto, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.Funcionario.dept)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.dept)</label>
                                @Html.DropDownListFor(model => model.Funcionario.iddept, Model.Departamentos, new { @class = "form-control standardSelect" })
                                @Html.ValidationMessageFor(model => model.Funcionario.dept, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.Funcionario.obs)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.obs)</label>
                                @Html.EditorFor(model => model.Funcionario.obs, new { htmlAttributes = new { @class = "form-control", @placeholder = "Observações" } })
                                @Html.ValidationMessageFor(model => model.Funcionario.obs, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">x
                                <label for="@Html.NameFor(x=>x.Funcionario.morada)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.morada)</label>
                                @Html.EditorFor(model => model.Funcionario.morada, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza a sua morada" } })
                                @Html.ValidationMessageFor(model => model.Funcionario.morada, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">x
                                <label for="@Html.NameFor(x=>x.Funcionario.codpostal)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.codpostal)</label>
                                @Html.DropDownListFor(model => model.Funcionario.codpostal, Model.Enderecos, new { @class = "form-control standardSelect" })
                                @Html.ValidationMessageFor(model => model.Funcionario.codpostal, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">x
                                <label for="@Html.NameFor(x=>x.Utilizador.email)" class=" form-control-label">@Html.DisplayNameFor(model => model.Utilizador.email)</label>
                                @Html.EditorFor(model => model.Utilizador.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu email" } })
                                @Html.ValidationMessageFor(model => model.Utilizador.email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="@Html.NameFor(x=>x.Utilizador.foto)" class=" form-control-label">@Html.DisplayNameFor(model => model.Utilizador.foto)</label>
                                <input type="file" name="foto" id="foto" />
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="fa fa-dot-circle-o"></i> Criar
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-danger btn-sm">
                                <i class="fa fa-ban"></i> Voltar
                            </a>
                        </div>
                    </div>
                }
            </div>*@


@using (Html.BeginForm(
actionName: "Create",
controllerName: "Funcionarios",
routeValues: null,
method: FormMethod.Post,
htmlAttributes: new { @enctype = "multipart/form-data" }))
{
    if (!string.IsNullOrEmpty((string)ViewBag.SubTitle))
    {
        <div class="modal-header">
            <h5 class="modal-title" id="staticModalLabel">@ViewBag.SubTitle</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <div class="modal-body">
        @Html.HiddenFor(model => model.Utilizador.password)
        @Html.HiddenFor(model => model.Utilizador.idtipo)
        @Html.HiddenFor(model => model.Utilizador.idUtilizador)
        @Html.HiddenFor(model => model.Utilizador.foto)
        @Html.HiddenFor(model => model.Funcionario.idUtilizador)
        @Html.HiddenFor(model => model.Funcionario.idfuncionario)
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col col-md-8" style="margin-top: 10px; padding: 0px">
                <div class="col col-md-12">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model=>model.Funcionario.nome)" class="form-control-label" style="line-height:36px">@Html.DisplayNameFor(model => model.Funcionario.nome):</label>
                    </div>
                    <div class="col col-md-10">
                        @Html.EditorFor(model => model.Funcionario.nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu primeiro e último nome..." } })
                        @Html.ValidationMessageFor(model => model.Funcionario.nome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col col-md-12" style="padding-top:10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model=>model.Utilizador.email)" class=" form-control-label" style="line-height:36px">@Html.DisplayNameFor(model => model.Utilizador.email):</label>
                    </div>
                    <div class="col col-md-10">
                        @Html.EditorFor(model => model.Utilizador.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu email..." } })
                        @Html.ValidationMessageFor(model => model.Utilizador.email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col col-md-12" style="padding-top:10px; padding-bottom:10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model=>model.Funcionario.contacto)" class=" form-control-label" style="line-height:36px">@Html.DisplayNameFor(model => model.Funcionario.contacto):</label>
                    </div>
                    <div class="col col-md-10">
                        @Html.TextBoxFor(model => model.Funcionario.contacto, new { @class = "form-control", @placeholder = "Introduza o seu contacto..." })
                        @Html.ValidationMessageFor(model => model.Funcionario.contacto, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-4">
                <img class="rounded-circle mx-auto d-block" src="images/admin.jpg" alt="Card image cap">
                @*<label class="switch switch-text switch-primary switch-pill"><input type="checkbox" class="switch-input" checked="true"> <span data-on="On" data-off="Off" class="switch-label"></span> <span class="switch-handle"></span></label>*@
            </div>
            <div class="col col-md-12">
                <div class="col col-md-2">
                    <label for="@Html.NameFor(model=>model.Funcionario.morada)" class=" form-control-label" style="line-height:36px">@Html.DisplayNameFor(model => model.Funcionario.morada):</label>
                </div>
                <div class="col col-md-10">
                    @Html.EditorFor(model => model.Funcionario.morada, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza a sua morada..." } })
                    @Html.ValidationMessageFor(model => model.Funcionario.morada, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col col-md-12">
                <div class="col col-md-3">
                    <label for="@Html.NameFor(model=>model.Funcionario.codpostal)" class=" form-control-label" style="line-height:30px">@Html.DisplayNameFor(model => model.Funcionario.codpostal):</label>
                </div>
                <div class="col col-md-9">
                    @Html.DropDownListFor(model => model.Funcionario.codpostal, Model.Enderecos, new { @class = "form-control localidadesDropdown" })
                    @Html.ValidationMessageFor(model => model.Funcionario.codpostal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col col-md-12">
                <div class="col col-md-2">
                    <label for="@Html.NameFor(model=>model.Funcionario.cargo)" class=" form-control-label" style="line-height:36px">@Html.DisplayNameFor(model => model.Funcionario.cargo)</label>
                </div>
                <div class="col col-md-10">
                    @Html.EditorFor(model => model.Funcionario.cargo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu cargo..." } })
                    @Html.ValidationMessageFor(model => model.Funcionario.cargo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col col-md-12">
                <div class="col col-md-3">
                    <label for="@Html.NameFor(model=>model.Funcionario.dept)" class=" form-control-label" style="line-height:30px">@Html.DisplayNameFor(model => model.Funcionario.dept):</label>
                </div>
                <div class="col col-md-9">
                    @Html.DropDownListFor(model => model.Funcionario.iddept, Model.Departamentos, new { @class = "form-control autoComplete" })
                    @Html.ValidationMessageFor(model => model.Funcionario.dept, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary"><i class="fa fa-floppy-o"></i>&nbsp; Guardar</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal"> <i class="fa fa-times"></i>&nbsp;Cancelar</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script>
    jQuery(document).ready(function () {
        jQuery(".autoComplete").chosen({});
    });

    $('.localidadesDropdown').ajaxChosen({
        dataType: 'json',
        type: 'POST',
        url: '@Url.Action("ObterLocalidadesFiltradas", "Localidades")'
    }, {
            loadingImg: 'images/loading.gif'
        });
</script>