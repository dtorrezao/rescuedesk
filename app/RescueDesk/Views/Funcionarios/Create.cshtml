@model RescueDesk.ViewModels.FuncionarioViewModel
@{
    ViewBag.Title = "Funcionarios";
    ViewBag.SubTitle = "Adicionar";
    ViewBag.FAIcon = "fa-suitcase";
}
<div class="col-lg-12">
    @using (Html.BeginForm(
        actionName: "Create",
        controllerName: "Funcionarios",
        routeValues: null,
        method: FormMethod.Post,
        htmlAttributes: new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-body card-block">
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.nome)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.nome)</label>
                    @Html.EditorFor(model => model.Funcionario.nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu primeiro e último nome" } })
                    @Html.ValidationMessageFor(model => model.Funcionario.nome, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.cargo)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.cargo)</label>
                    @Html.EditorFor(model => model.Funcionario.cargo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu cargo" } })
                    @Html.ValidationMessageFor(model => model.Funcionario.cargo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.contacto)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.contacto)</label>
                    @Html.EditorFor(model => model.Funcionario.contacto, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu contacto" } })
                    @Html.ValidationMessageFor(model => model.Funcionario.contacto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.dept)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.dept)</label>
                    @Html.DropDownListFor(model => model.Funcionario.iddept, Model.Departamentos, new { @class = "form-control standardSelect" })
                    @Html.ValidationMessageFor(model => model.Funcionario.dept, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.obs)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.obs)</label>
                    @Html.EditorFor(model => model.Funcionario.obs, new { htmlAttributes = new { @class = "form-control", @placeholder = "Observações" } })
                    @Html.ValidationMessageFor(model => model.Funcionario.obs, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.morada)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.morada)</label>
                    @Html.EditorFor(model => model.Funcionario.morada, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza a sua morada" } })
                    @Html.ValidationMessageFor(model => model.Funcionario.morada, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Funcionario.codpostal)" class=" form-control-label">@Html.DisplayNameFor(model => model.Funcionario.codpostal)</label>
                    @Html.DropDownListFor(model => model.Funcionario.codpostal, Model.Enderecos, new { @class = "form-control standardSelect" })
                    @Html.ValidationMessageFor(model => model.Funcionario.codpostal, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Utilizador.email)" class=" form-control-label">@Html.DisplayNameFor(model => model.Utilizador.email)</label>
                    @Html.EditorFor(model => model.Utilizador.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu email" } })
                    @Html.ValidationMessageFor(model => model.Utilizador.email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Utilizador.foto)" class=" form-control-label">@Html.DisplayNameFor(model => model.Utilizador.foto)</label>
                    <input type="file" name="foto" id="foto" />
                </div>
                @Html.HiddenFor(x => x.Utilizador.password)
                @Html.HiddenFor(x => x.Utilizador.idtipo)
                @Html.HiddenFor(x => x.Funcionario.ativo)
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Criar
                </button>
                <a href="@Url.Action("Index")" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Voltar
                </a>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
