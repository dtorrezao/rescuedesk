@model RescueDesk.Models.Pedido
@{
    Layout = null;
    ViewBag.Title = "Pedido";
    ViewBag.SubTitle = "Encaminhar";
    List<SelectListItem> actividades = (List<SelectListItem>)ViewBag.TiposActividade;
    List<SelectListItem> funcionarios = (List<SelectListItem>)ViewBag.ListaFuncionarios;
}

<div class="col-lg-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idpedido)
        @Html.HiddenFor(model => model.dtlido)
        @Html.HiddenFor(model => model.assunto)
        @Html.HiddenFor(model => model.descricao)
        @Html.HiddenFor(model => model.dtpedido)
        @Html.HiddenFor(model => model.dtresolvido)
        @Html.HiddenFor(model => model.obs)
        @Html.HiddenFor(model => model.nrcontribuinte)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-body card-block">
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.assunto)" class=" form-control-label">@Html.DisplayNameFor(model => model.assunto)</label>
                    @Html.EditorFor(model => model.assunto, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @placeholder = "Introduza o assunto do pedido..." } })
                    @Html.ValidationMessageFor(model => model.assunto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.idatividade)" class=" form-control-label">@Html.DisplayNameFor(model => model.idatividade)</label>
                    @Html.DropDownListFor(model => model.idatividade, actividades, new { @class = "form-control autoComplete" })
                    @Html.ValidationMessageFor(model => model.idatividade, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.dtpedido)" class=" form-control-label">@Html.DisplayNameFor(model => model.dtpedido)</label>
                    @Html.EditorFor(model => model.dtpedido, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.dtpedido, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.dtmarcado)" class=" form-control-label">@Html.DisplayNameFor(model => model.dtmarcado)</label>
                    @Html.EditorFor(model => model.dtmarcado, new { htmlAttributes = new { @class = "form-control date", @placeholder = "...", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.dtmarcado, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.prioridade)" class=" form-control-label">@Html.DisplayNameFor(model => model.prioridade)</label>
                    @Html.EnumDropDownListFor(model => model.prioridade, new { @class = "form-control autoComplete", @placeholder = "..." })
                    @Html.ValidationMessageFor(model => model.prioridade, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.idfuncionario)" class=" form-control-label">@Html.DisplayNameFor(model => model.idfuncionario)</label>
                    @Html.DropDownListFor(model => model.idfuncionario, funcionarios, new { @class = "form-control autoComplete" })
                    @Html.ValidationMessageFor(model => model.idfuncionario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Editar
                </button>
                <a href="@Url.Action("Index")" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Voltar
                </a>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    jQuery(document).ready(function () {
        jQuery(".autoComplete").chosen({});
    });

    $.datetimepicker.setLocale('pt');

    $('.date').datetimepicker({
        format: 'd/m/Y H:i:s'
    });

    function getFormattedDate(date) {
        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear().toString().slice(2);
        return day + '-' + month + '-' + year;
    }
</script>
