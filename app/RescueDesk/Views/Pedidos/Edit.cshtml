@model RescueDesk.Models.Pedido
@using RescueDesk.Utils

@{
    Layout = null;
    ViewBag.Title = "Pedido";
    ViewBag.SubTitle = "Editar Pedido";
    List<SelectListItem> atividades = (List<SelectListItem>)ViewBag.TiposActividade;
    List<SelectListItem> clientes = (List<SelectListItem>)ViewBag.ListaClientes;
    List<SelectListItem> funcionarios = (List<SelectListItem>)ViewBag.ListaFuncionarios;
}

@using (Html.BeginForm(
actionName: "Edit",
controllerName: "Pedidos",
routeValues: null,
method: FormMethod.Post))
{
    if (!string.IsNullOrEmpty((string)ViewBag.SubTitle))
    {
        <div class="modal-header">
            <h5 class="modal-title" id="staticModalLabel">@ViewBag.SubTitle</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idpedido)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col col-md-12 form-group">
                <div class="col col-md-1" style="margin-right: -30px">
                    <label for="@Html.NameFor(model => model.idpedido)" class=" form-control-label" style="line-height:32px">@Html.DisplayNameFor(model => model.idpedido):</label>
                </div>
                <div class="col col-md-2">
                    @Html.EditorFor(model => model.idpedido, new { htmlAttributes = new { @disabled = "disabled", @class = "input-sm form-control-sm form-control", @style = "text-align: end" } })
                    @Html.ValidationMessageFor(model => model.idpedido, "", new { @class = "text-danger" })
                </div>
                <div class="col col-md-2" style="margin-right: -52px; margin-left: 209px">
                    <label for="@Html.NameFor(model => model.dtpedido)" class=" form-control-label" style="line-height:32px">@Html.DisplayNameFor(model => model.dtpedido) a:</label>
                </div>
                <div class="col col-md-5">
                    @Html.EditorFor(model => model.dtpedido, new { htmlAttributes = new { @disabled = "disabled", @class = "input-sm form-control-sm form-control", @style = "text-align: end" } })
                    @Html.ValidationMessageFor(model => model.dtpedido, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (ViewHelper.IsAdmin())
            {

                <div class="col col-md-12 form-group" style="margin-top: -10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model => model.nrcontribuinte)" class=" form-control-label" style="line-height:28px">Cliente:</label>
                    </div>
                    <div class="col col-md-10" style="margin-left: -32px">
                        @Html.DropDownListFor(model => model.nrcontribuinte, clientes, new { @class = "form-control autoComplete", @style = "width: 641px !important" })
                        @Html.ValidationMessageFor(model => model.nrcontribuinte, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else if (ViewHelper.IsFuncionario())
            {
                @Html.HiddenFor(model => model.nrcontribuinte)
                <div class="col col-md-12 form-group" style="margin-top: -10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model => model.nrcontribuinte)" class=" form-control-label" style="line-height:28px">Cliente:</label>
                    </div>
                    <div class="col col-md-10" style="margin-left: -32px">
                        @Html.DropDownListFor(model => model.nrcontribuinte, clientes, new { @disabled = "disabled", @class = "form-control autoComplete", @style = "width: 641px" })
                        @Html.ValidationMessageFor(model => model.nrcontribuinte, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else if (ViewHelper.IsCliente())
            {
                @Html.HiddenFor(model => model.nrcontribuinte)
            }
            <div class="col col-md-12 form-group" style="margin-top: -10px">
                <div class="col col-md-2">
                    <label for="@Html.NameFor(model =>model.assunto)" class=" form-control-label" style="line-height:36px">@Html.DisplayNameFor(model => model.assunto):</label>
                </div>
                <div class="col col-md-10" style="margin-left: -32px">
                    @Html.EditorFor(model => model.assunto, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o assunto do pedido...", @autocomplete = "off", @style = "width: 641px" } })
                    @Html.ValidationMessageFor(model => model.assunto, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col col-md-12 form-group" style="margin-top: -10px">
                <div class="col col-md-12">
                    <label for="@Html.NameFor(model=>model.descricao)" class=" form-control-label">@Html.DisplayNameFor(model => model.descricao):</label>
                </div>
                <div class="col col-md-12">
                    @Html.TextAreaFor(model => model.descricao, new { @class = "form-control", @placeholder = "Introduza a descrição do problema...", @rows = "8" })
                    @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (ViewHelper.IsAdmin())
            {
                if (Model.funcionario == null)
                {
                    <div class="col col-md-12 form-group">
                        <div class="col col-md-2">
                            <label for="@Html.NameFor(model =>model.idfuncionario)" class=" form-control-label" style="line-height:28px; margin-right: -32px">@Html.DisplayNameFor(model => model.funcionario):</label>
                        </div>
                        <div class="col col-md-10" style="margin-left: -32px">
                            @Html.EditorFor(model => model.idfuncionario, new { htmlAttributes = new { @disabled = "disabled", @class = "input-sm form-control-sm form-control", @style = "width: 641px" } })
                            @Html.ValidationMessageFor(model => model.idfuncionario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="col col-md-12 form-group">
                        <div class="col col-md-2">
                            <label for="@Html.NameFor(model =>model.idfuncionario)" class=" form-control-label" style="line-height:28px; margin-right: -32px">@Html.DisplayNameFor(model => model.funcionario):</label>
                        </div>
                        <div class="col col-md-10" style="margin-left: -32px">
                            @Html.DropDownListFor(model => model.idfuncionario, funcionarios, new { @class = "form-control autoComplete", @style = "width: 641px" })
                            @Html.ValidationMessageFor(model => model.idfuncionario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
            else
            {
                @Html.HiddenFor(model => model.idfuncionario)
            }
            @if (ViewHelper.IsAdmin() || ViewHelper.IsFuncionario())
            {
                <div class="col col-md-12 form-group" style="margin-top: -10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model =>model.idatividade)" class=" form-control-label" style="line-height:28px">@Html.DisplayNameFor(model => model.atividade):</label>
                    </div>
                    <div class="col col-md-10" style="margin-left: -32px">
                        @Html.DropDownListFor(model => model.idatividade, atividades, new { @class = "form-control autoComplete", @style = "width: 641px" })
                        @Html.ValidationMessageFor(model => model.idatividade, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col col-md-12 form-group" style="margin-top: -10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model =>model.prioridade)" class=" form-control-label" style="line-height:28px">@Html.DisplayNameFor(model => model.prioridade):</label>
                    </div>
                    <div class="col col-md-5" style="margin-left: -32px">
                        @Html.EnumDropDownListFor(model => model.prioridade, new { @class = "form-control autoComplete" })
                        @Html.ValidationMessageFor(model => model.prioridade, "", new { @class = "text-danger" })
                    </div>
                    <div class="col col-md-2" style="margin-right: -70px; margin-left: 34px">
                        <label for="@Html.NameFor(model =>model.dtlido)" class=" form-control-label" style="line-height:28px">@Html.DisplayNameFor(model => model.dtlido) a:</label>
                    </div>
                    <div class="col col-md-3">
                        @Html.EditorFor(model => model.dtlido, new { htmlAttributes = new { @disabled = "disabled", @class = "input-sm form-control-sm form-control", @style = "text-align: end; width: 230px" } })
                        @Html.ValidationMessageFor(model => model.dtlido, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.dtresolvido)
                <div class="col col-md-12 form-group" style="margin-top: -10px">
                    <div class="col col-md-2">
                        <label for="@Html.NameFor(model =>model.dtmarcado)" class=" form-control-label" style="line-height:28px">@Html.DisplayNameFor(model => model.dtmarcado):</label>
                    </div>
                    <div class="col col-md-5" style="margin-left: -32px">
                        @Html.EditorFor(model => model.dtmarcado, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "input-sm form-control-sm form-control date",
                                    @placeholder = "Introduza data de marcação...",
                                    @autocomplete = "off",
                                    @style = "text-align: end"
                                }
                            })
                        @Html.ValidationMessageFor(model => model.dtmarcado, "", new { @class = "text-danger" })
                    </div>
                    <div class="col col-md-2" style="margin-right: -46px; ; margin-left: 34px">
                        <label for="@Html.NameFor(model =>model.Resolvido)" class=" form-control-label" style="line-height:28px">@Html.DisplayNameFor(model => model.Resolvido):</label>
                    </div>
                    <div class="col col-md-1" style="margin-top: 3px">
                        <label class="checkboxAlter">
                            @if (Model.Resolvido)
                            {
                                @Html.EditorFor(model => model.Resolvido, new { htmlAttributes = new { @disabled = "disabled" } })
                                <span class="checkmark"></span>

                            }
                            else
                            {
                                @Html.EditorFor(model => model.Resolvido)
                                <span class="checkmark"></span>
                            }
                        </label>
                    </div>
                </div>
                <div class="col col-md-12 form-group" style="margin-top: -10px">
                    <div class="col col-md-12">
                        <label for="@Html.NameFor(model=>model.obs)" class=" form-control-label">@Html.DisplayNameFor(model => model.obs):</label>
                    </div>
                    <div class="col col-md-12">
                        @Html.TextAreaFor(model => model.obs, new { @class = "form-control", @placeholder = "Ex: anomalia no pedido, outras observações...", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.obs, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                @Html.HiddenFor(model => model.idatividade)
                @Html.HiddenFor(model => model.prioridade)
                @Html.HiddenFor(model => model.dtlido)
                @Html.HiddenFor(model => model.dtmarcado)
                @Html.HiddenFor(model => model.dtresolvido)
                @Html.HiddenFor(model => model.obs)
            }
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary"><i class="fa fa-floppy-o"></i>&nbsp; Guardar</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal"> <i class="fa fa-times"></i>&nbsp;Cancelar</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    jQuery(document).ready(function () {
        jQuery(".autoComplete").chosen({});
    });

    $.datetimepicker.setLocale('pt');

    $('.date').datetimepicker({
        format: 'd/m/Y H:i:s'
    });

    function getFormattedDate(date) {
        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear().toString().slice(2);
        return day + '-' + month + '-' + year;
    }
</script>
<style>
    #nrcontribuinte_chosen {
        width: 641px !important;
    }

    #idfuncionario_chosen {
        width: 641px !important;
    }

    #idatividade_chosen {
        width: 641px !important;
    }
</style>