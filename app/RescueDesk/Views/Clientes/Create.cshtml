@model RescueDesk.ViewModels.ClienteViewModel
@{
    Layout = null;
    ViewBag.Title = "Clientes";
    ViewBag.SubTitle = "Adicionar";
    //listar Moradas disponiveis
    var AvailableAddress = ViewBag.AvailableAddress as List<SelectListItem> ?? new List<SelectListItem>() { new SelectListItem() { Text="Selecione uma localidade" } } ;

}
<div class="col-lg-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-body card-block">
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Cliente.nrcontribuinte)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.nrcontribuinte)</label>
                    @Html.EditorFor(model => model.Cliente.nrcontribuinte, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your company name" } })
                    @Html.ValidationMessageFor(model => model.Cliente.nrcontribuinte, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Cliente.nome)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.nome)</label>
                    @Html.EditorFor(model => model.Cliente.nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu primeiro e último nome" } })
                    @Html.ValidationMessageFor(model => model.Cliente.nome, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Cliente.morada)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.morada)</label>
                    @Html.EditorFor(model => model.Cliente.morada, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.Cliente.morada, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Cliente.codpostal)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.codpostal)</label>
                    @Html.DropDownListFor(model => model.Cliente.codpostal, AvailableAddress, new { @class = "form-control localidadesDropdown" })
                    @Html.ValidationMessageFor(model => model.Cliente.codpostal, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Cliente.contacto)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.contacto)</label>
                    @Html.EditorFor(model => model.Cliente.contacto, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.Cliente.contacto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @*<label class="switch switch-text switch-primary switch-pill"><input type="checkbox" class="switch-input" checked="true"> <span data-on="On" data-off="Off" class="switch-label"></span> <span class="switch-handle"></span></label>*@

                    <label for="@Html.NameFor(x=>x.Cliente.email)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.email)</label>
                    @Html.EditorFor(model => model.Cliente.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.Cliente.email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.Cliente.obs)" class=" form-control-label">@Html.DisplayNameFor(model => model.Cliente.obs)</label>
                    @Html.EditorFor(model => model.Cliente.obs, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.Cliente.obs, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.CriarUtilizador)" class=" form-control-label">@Html.DisplayNameFor(model => model.CriarUtilizador)</label>
                    @Html.EditorFor(model => model.CriarUtilizador, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.CriarUtilizador, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Criar
                </button>
                <a href="@Url.Action("Index")" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Voltar
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

<script>
    $('.localidadesDropdown').ajaxChosen({
        dataType: 'json',
        type: 'POST',
        url: '@Url.Action("ObterLocalidadesFiltradas", "Localidades")'
    }, {
            loadingImg: 'images/loading.gif'
        });
</script>