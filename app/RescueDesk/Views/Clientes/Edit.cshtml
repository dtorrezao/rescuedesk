@model RescueDesk.Models.Cliente
@{
    ViewBag.Title = "Clientes";
    ViewBag.SubTitle = "Editar";
    //listar Moradas disponiveis
    var AvailableAddress = ViewBag.AvailableAddress as List<SelectListItem>;

}
<div class="col-lg-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.nrcontribuinte)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-body card-block">
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.nrcontribuinte)" class=" form-control-label">@Html.DisplayNameFor(model => model.nrcontribuinte)</label>
                    <p class="form-control-static">@Html.DisplayFor(model => model.nrcontribuinte)</p>
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.nome)" class=" form-control-label">@Html.DisplayNameFor(model => model.nome)</label>
                    @Html.EditorFor(model => model.nome, new
                    {
                        htmlAttributes = new { @class = "form-control", @placeholder = "Introduza o seu primeiro e último nome" }
                    })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.morada)" class=" form-control-label">@Html.DisplayNameFor(model => model.morada)</label>
                    @Html.EditorFor(model => model.morada, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.morada, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.codpostal)" class=" form-control-label">@Html.DisplayNameFor(model => model.codpostal)</label>
                   @Html.DropDownListFor(model => model.codpostal, AvailableAddress, new { @class = "form-control standardSelect" })
                    @Html.ValidationMessageFor(model => model.codpostal, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.contacto)" class=" form-control-label">@Html.DisplayNameFor(model => model.contacto)</label>
                    @Html.EditorFor(model => model.contacto, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.contacto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.email)" class=" form-control-label">@Html.DisplayNameFor(model => model.email)</label>
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control ", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.obs)" class=" form-control-label">@Html.DisplayNameFor(model => model.obs)</label>
                    @Html.EditorFor(model => model.obs, new { htmlAttributes = new { @class = "form-control ", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.obs, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Editar
                </button>
                <a href="@Url.Action("Index")" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Voltar
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
