@model RescueDesk.Models.Utilizador

@{
    ViewBag.Title = "Utilizadores";
    ViewBag.SubTitle = "Editar";
}

<div class="col-lg-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idUtilizador)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-body card-block">
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.idUtilizador)" class=" form-control-label">@Html.DisplayNameFor(model => model.idUtilizador)</label>
                    @Html.EditorFor(model => model.idUtilizador, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.idUtilizador, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.email)" class=" form-control-label">@Html.DisplayNameFor(model => model.email)</label>
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.password)" class=" form-control-label">@Html.DisplayNameFor(model => model.password)</label>
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.nrcontribuinte)" class=" form-control-label">@Html.DisplayNameFor(model => model.nrcontribuinte)</label>
                    @Html.EditorFor(model => model.nrcontribuinte, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.nrcontribuinte, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.foto)" class=" form-control-label">@Html.DisplayNameFor(model => model.foto)</label>
                    @Html.EditorFor(model => model.foto, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="@Html.NameFor(x=>x.idtipo)" class=" form-control-label">@Html.DisplayNameFor(model => model.idtipo)</label>
                    @Html.EditorFor(model => model.idtipo, new { htmlAttributes = new { @class = "form-control", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.idtipo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="fa fa-dot-circle-o"></i> Editar
                </button>
                <a href="@Url.Action("Index")" class="btn btn-danger btn-sm">
                    <i class="fa fa-ban"></i> Voltar
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

