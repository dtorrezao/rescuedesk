@model RescueDesk.Models.Mensagem
@{
    Layout = null;
    ViewBag.Title = "Mensagem";
    ViewBag.SubTitle = "Mensagem";
    List<SelectListItem> utilizadores = (List<SelectListItem>)ViewBag.ListaUtilizadores;

    int vmensagem = ViewBag.vmensagem;
}

@using (Html.BeginForm(
actionName: "Details",
controllerName: "Mensagens",
routeValues: null,
method: FormMethod.Post,
htmlAttributes: new { @enctype = "multipart/form-data", @class = "hasImage" }))
{
    if (!string.IsNullOrEmpty((string)ViewBag.SubTitle))
    {
        <div class="modal-header">
            <h5 class="modal-title" id="staticModalLabel">@ViewBag.SubTitle</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
        <div class="modal-body">
            @Html.HiddenFor(model => model.idmensagem)
            @Html.HiddenFor(model => model.assunto)
            @Html.HiddenFor(model => model.corpo)
            @Html.HiddenFor(model => model.recetor)
            @Html.HiddenFor(model => model.emissor)
            @Html.HiddenFor(model => model.dtenviado)
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                @if (vmensagem == 1)
                {
                    <div class="col col-md-1">
                        <label for="@Html.NameFor(model => model.recetor))" class="form-control-label" style="line-height: 28px; font-size: 15px">Para:</label>
                    </div>
                    <div class="col col-md-11">
                        @Html.DropDownListFor(model => model.recetor, utilizadores, new { @class = "form-control autoComplete" })
                        @Html.ValidationMessageFor(model => model.recetor, "", new { @class = "text-danger" })
                    </div>
                }
                @if (vmensagem == 2)
                {
                    <div class="col col-md-1">
                        <label for="@Html.NameFor(model => model.emissor))" class="form-control-label" style="line-height: 28px; font-size: 15px">De:</label>
                    </div>
                    <div class="col col-md-11">
                        @Html.DropDownListFor(model => model.recetor, utilizadores, new { @class = "form-control autoComplete" })
                        @Html.ValidationMessageFor(model => model.recetor, "", new { @class = "text-danger" })
                    </div>
                }
                <div class="col col-md-1">
                    <label for="@Html.NameFor(model =>model.assunto)" class="form-control-label" style="line-height: 38px; font-size: 15px">@Html.DisplayNameFor(model => model.assunto):</label>
                </div>
                <div class="col col-md-11">
                    @Html.EditorFor(model => model.assunto, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @placeholder = "Introduza o assunto da mensagem...", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.assunto, "", new { @class = "text-danger" })
                </div>
                <div class="col col-md-12">
                    @Html.TextAreaFor(model => model.corpo, new { @disabled = "disabled", @class = "form-control", @placeholder = "Escreva aqui a sua mensagem...", @rows = "15" })
                    @Html.ValidationMessageFor(model => model.corpo, "", new { @class = "text-danger" })
                </div>
                <div class="col col-md-1" style="margin-top: 8px;">
                    <label for="@Html.NameFor(model =>model.dtenviado)" class="form-control-label" style="line-height: 28px">@Html.DisplayNameFor(model => model.dtenviado):</label>
                </div>
                <div class="col col-md-11" style="margin-top: 8px;">
                    @Html.EditorFor(model => model.dtenviado, new { htmlAttributes = new { @disabled = "disabled", @class = "input-sm form-control-sm form-control", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.dtenviado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script>
    jQuery(document).ready(function () {
        jQuery(".autoComplete").chosen({});
        $('.autoComplete').prop('disabled', true).trigger("chosen:updated");
    });
</script>